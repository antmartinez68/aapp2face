from typer.testing import CliRunner

from aapp2face.cli.main import app

from .constants import TEST_RESPONSES_PATH

runner = CliRunner()


def test_estados():
    expected_output = (
        "Aviso: Usando entorno de simulación. Algunos parámetros de configuración serán ignorados."
        "Código:         1200"
        "Flujo:          ordinario"
        "Nombre:         Registrada"
        "Nombre público: Registrada"
        "Descripción:    La factura ha sido registrada en el registro electrónico REC"
        ""
        "Código:         1300"
        "Flujo:          ordinario"
        "Nombre:         Registrada en RCF"
        "Nombre público: Registrada en RCF"
        "Descripción:    La factura ha sido registrada en RCF"
        ""
        "Código:         1400"
        "Flujo:          ordinario"
        "Nombre:         Verificada en RCF"
        "Nombre público: Registrada en RCF"
        "Descripción:    la factura ha sido verificada en RCF"
        ""
        "Código:         2100"
        "Flujo:          ordinario"
        "Nombre:         Recibida en destino"
        "Nombre público: Registrada en RCF"
        "Descripción:    La Unidad ha recibido la factura"
        ""
        "Código:         2300"
        "Flujo:          ordinario"
        "Nombre:         Conformada"
        "Nombre público: Registrada en RCF"
        "Descripción:    La Unidad Tramitadora ha aceptado el pago de la factura remitida"  ## Esta línea presenta el problema de columna 80 en Linux/Windows. Se corrige manualmente cortando la respuesta.
        ""
        "Código:         2400"
        "Flujo:          ordinario"
        "Nombre:         Contabilizada la obligación reconocida"
        "Nombre público: Contabilizada la obligación reconocida"
        "Descripción:    Contabilizada la obligación reconocida"
        ""
        "Código:         2500"
        "Flujo:          ordinario"
        "Nombre:         Pagada"
        "Nombre público: Pagada"
        "Descripción:    Factura pagada"
        ""
        "Código:         2600"
        "Flujo:          ordinario"
        "Nombre:         Rechazada"
        "Nombre público: Rechazada"
        "Descripción:    La Unidad rechaza la factura"
        ""
        "Código:         3100"
        "Flujo:          ordinario"
        "Nombre:         Anulada"
        "Nombre público: Anulada"
        "Descripción:    La Unidad aprueba la propuesta de anulación"
        ""
        "Código:         4100"
        "Flujo:          anulación"
        "Nombre:         No solicitada anulación"
        "Nombre público: No solicitada anulación"
        "Descripción:    No solicitada anulación"
        ""
        "Código:         4200"
        "Flujo:          anulación"
        "Nombre:         Solicitada anulación"
        "Nombre público: Solicitada anulación"
        "Descripción:    Solicitada anulación"
        ""
        "Código:         4400"
        "Flujo:          anulación"
        "Nombre:         Rechazada anulación"
        "Nombre público: Rechazada anulación"
        "Descripción:    Rechazada anulación"
        ""
        "Código:         4300"
        "Flujo:          anulación"
        "Nombre:         Aceptada anulación"
        "Nombre público: Aceptada anulación"
        "Descripción:    Aceptada anulación"
        ""
        "13 estados disponibles"
    )

    result = runner.invoke(app, ["--fake-set", TEST_RESPONSES_PATH, "estados"])
    assert result.exit_code == 0
    assert expected_output.replace("\n", "") in result.stdout.replace("\n", "")
